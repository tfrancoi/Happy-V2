<!-- Syntaxe pour le préprocesseur-->
<Comment> --> 'esp' [! 'esp' <String> 'esp' !] 'esp'
<Directive> --> 'esp' [# 'esp' <Dir_Name> 'esp' <Dir_Args_list>  'esp' '#]' 'esp'
<Dir_Args_list> --> <String> | <String> 'esp' <Dir_Args_list>  

<!-- Syntaxe pour l'analyseur lexical -->
<id>		--> <Suite_caractère> / <PNumber>

<Number> --> <PNumber> | - <PNumber>
<PNumber>  --> <Nat> | <Real>

<String>					--> '"' <Suite_caractère> '"'
<Suite_caractère> --> <Caractère> | <Caractère> <Suite_caractère>
<Caractère>				--> 'a-z' | 'A-Z' | '0-9' | 'et tout le reste'...


<Reserved_char>  	--> '(' | ')' | '"'
<Reserved_word> 	--> '[!' | '!]' | '[#' | '#]'

<!-- syntaxe pour le parser -->
<Programme> 	--> <Fun_list> | <Block_fun>
<Block_fun> --> '(' <Block_fun> ')' | <Block_fun> <Block_fun> | '(' <Fun_list> ')' 
<Fun_list>  --> <Fun> | <Fun> <Fun_list>
<!-- les fonctions prennent un premier id qui n'est asscoier à aucune valeur
<Fun> --> '(' fun id '(' 



<Instr>		--> <Block> | <If> | <While> | <Call> | <Assignement>
<Block>		--> '(' <List> ')'
<List>		--> <Instr> | <Instr> <List>


<Expr>	--> <Call> | <id> | <value>
<call>  --> '(' <id> <arg_list> ')'
<value> --> <String> | <Number>






